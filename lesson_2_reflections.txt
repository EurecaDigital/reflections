UPDATE LC x AZT x EURECA
============================

What happens when you initialize a repository? Why do you need to do it?
--
O que acontece ao iniciar um repositório? Por que você precisa fazer isso?

	RS.: Ao iniciar um repositório, é criado uma pasta oculta .git onde conterá toda a configuração do repositório.
		 É preciso inicializar o git para transformar a pasta em repositório.


How is the staging area different from the working directory and the repository?
What value do you think it offers?
--
Em que se difere a área de preparação do diretório de trabalho e do repositório? Qual valor você acha que ela oferece?

	RS.: A area de preparação do diretório, é uma área onde ficam os arquivos adicionados recentemente e que não foram commitados,
	     isso nos dá a oportunidade de identificar quantos são os commits, identificando se podemos agrupar os arquivos.
	     Além de mostrar os arquivos disponíveis para serem commitados, também exibo os arquivos que não foram adicionados a área de preparação.


	     IMPORTANTE! git diff - sem parametros, 
	                            mostra a diferença entre arquivos que estão no diretório e sua versão na área de preparação.
	                 - git add nome-arquivo (adiciona um arquivo a área de preparação)
	                 - git commit ( cria um commit dos arquivos da área de preparação)
	                 - git reset nome-arquivo ( exclui um arquivo da área de preparação)

How can you use the staging area to make sure you have one commit per logical
change?
--
Como você pode usar a área de preparação para garantir que tenha um commit por alteração lógica?
	
	RS.: Verificando na área de preparação se todos os arquivos que estão lá, se referem a uma
		 mesma alteração lógica.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
--
Quais são algumas das situações em que branches seriam úteis para manter seu histórico organizado? Como branches ajudariam?

	RS.: Branchs são uteis para você criar uma versão de seu app, a partir da original, sem mexer na original.
		 Na verdade uma nova branch é uma cópia da branch master.

		 - git branch (exibie as branchs que existem, a original/inicial de um repositório sempre será a master )
		 - git branch nome-da-branch (cria uma nova branch com o nome fornecido)
		 - git checkout nome-da-branch (alterna você para a branch fornecida)


How do the diagrams help you visualize the branch structure?
--
Como os diagramas ajudam a visualizar a estrutura de branches?
	
	RS.: Identificando as possíveis versões/brenchs existentes, e que commits fazem parte delas,
		 assim como se existe algum commit que não está necessariamente dentro de um branch

		 git checkout -b nome-do-branch (é igual a dois comandos, criação do branch e acesso ao mesmo, checkout)

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
